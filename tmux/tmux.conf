unbind C-b
set -g prefix C-a
# -r - This flag allows key-bindings to be repeated without requiring the prefix key.
bind-key C-a send-prefix
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"
set -g default-command "zsh"

# use vim keybindings in copy mode
setw -g mode-keys vi

# increase scrollbkac buffer size
set -g history-limit 10000

set-option -g renumber-windows on
# set-option -g default-terminal 'screen-256color'
set -g default-terminal "tmux-256color"
set-option -g status-keys "emacs"
set-option -g status-bg "#666666"
set-option -g status-fg "#aaaaaa"

set-option -g status-left-length 100
set-option -g status-right-length 100
set-option -g status-left " #{session_name} "
set-option -g status-right " #{pane-title} "

set-option -g window-status-format "#{window_index} #{pane_current_command} "
set-option -g window-status-current-format "#[fg=#545c7e]#{window_index} #[fg=#E9E9EA]#{pane_current_command} "

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -sg escape-time 0

#create new pane
# -n - This flag allows the key-binding to run without need for the prefix key.
bind-key - split-window -v -c '#{pane_current_path}'
bind-key \\ split-window -h -c '#{pane_current_path}'
bind-key v split-window -v -c '#{pane_current_path}'
bind-key h split-window -h -c '#{pane_current_path}'

unbind x
bind-key -n C-x kill-pane -t :=

bind-key -n C-h "select-pane -L"
bind-key -n C-j "select-pane -D"
bind-key -n C-l "select-pane -R"
bind-key -n C-k "select-pane -U"

# easily swap a pane with current pane
bind-key s display-panes\; command-prompt -p "pane #: " "swap-pane -t '%%'"

# create new window
bind-key c new-window -c '#{pane_current_path}'
# prefix l -- to alternate window i.e: last-window
# prefix L -- to alternate session i.e: switch-client
# kill current window, and kill session if current window is last window
bind k kill-window -t :=

# bind-key ^ last-window -l
# Switch between two most recently used sessions
bind Space switch-client -l

# detach pane and move to new window
bind-key b break-pane -d

# prompted join-pane
bind-key j command-prompt -p "join page from: " "join-pane -h -s '%%'"

# resize pane
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1
# prefix z  : toggle zooming current pane

bind-key C-j choose-tree
# use fzf
# bind-key C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# kill current session and jump to next session without leaving tmux
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# https://thoughtbot.com/blog/tmux-copy-paste-on-os-x-a-better-future
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
